#key:void
#key:int
#key:double
#key:bool
#key:char
#key:null
#key:for
#key:while
#key:do
#key:if
#key:else
#key:switch
#key:return
#key:break
1:void int double bool char null for while do if else switch return break
#key:continue
#key:const
#key:true
#key:false
#key:struct
#key:case
#key:default
2:continue const true false struct case default
#key:fclose
#key:clearerr
#key:feof
#key:ferror
#key:fflush
#key:fgetpos
#key:fopen
#key:fread
#key:freopen
#key:fseek
#key:fsetpos
#key:ftell
#key:fwrite
#key:remove
3:fclose clearerr feof ferror fflush fgetpos fopen fread freopen fseek fsetpos ftell fwrite remove 
#key:rename
#key:rewind
#key:setbuf
#key:setvbuf
#key:tmpfile
#key:tmpnam
#key:fprintf
#key:printf
#key:sprintf
#key:vfprintf
#key:vprintf
#key:vsprintf
#key:fscanf
4:rename rewind setbuf setvbuf tmpfile tmpnam fprintf printf sprintf vfprintf vprintf vsprintf fscanf
#key:scanf
#key:sscanf
#key:fgetc
#key:fgets
#key:fputc
#key:fputs
#key:getc
#key:getchar
#key:gets
#key:putc
#key:putchar
#key:puts
#key:ungetc
#key:perror
5:scanf sscanf fgetc fgets fputc fputs getc getchar gets putc putchar puts ungetc perror
#op:+
#op:-
#op:*
#op:/
#op:%
#op:++
#op:--
#op:<
#op:<=
#op:>
#op:>=
#op:==
#op:!=
#op:=
#op:&&
#op:||
#op:!
6:+ - * / % ++ -- < <= > >= == != = && || !
#punc::
#punc:;
#punc:,
#punc:.
#punc:[
#punc:]
#punc:(
#punc:)
#punc:{
#punc:}
7:: ; , . [] () {}
#integer:1
#integer:2
#integer:3
#integer:4
#integer:567
#integer:8910
8:1 2 3 4 567 8910  
#double:2.3
#double:3.3
#double:55.1
#double:0.2
#double:0.8888
#double:.2323
9:2.3 3.3 55.1 0.2 0.8888 .2323
#char:'a'
#char:'b'
#char:'c'
#char:'d'
#char:'z'
#char:'@'
#char:'#'
10:'a' 'b' 'c' 'd' 'z' '@' '#'
#id:Please
#id:make
#id:sure
#id:your
#id:output
#id:format
#id:is
#id:correct
#id:or
#id:you
#id:will
#id:receive
#id:zero
#id:credit
11:Please make sure your output format is correct or you will receive zero credit
#id:You
#id:have
#id:been
#id:warned
12:You have been warned
#id:Seriously
13:Seriously
